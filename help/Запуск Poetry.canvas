{
	"nodes":[
		{"id":"e7a1cabf00b29f65","type":"group","x":-1420,"y":1200,"width":2940,"height":771,"color":"4","label":"Зависимости"},
		{"id":"1266d39cf15c5cfa","type":"group","x":520,"y":1280,"width":980,"height":580,"label":"Переустановка"},
		{"id":"8b9c2f77da1971d7","type":"group","x":-1400,"y":1280,"width":813,"height":671,"label":"Новый проект"},
		{"id":"c41851426f854b51","type":"group","x":-410,"y":640,"width":902,"height":480,"color":"4","label":"Venv"},
		{"id":"dab7ef701a113304","type":"group","x":-410,"y":-540,"width":902,"height":459,"color":"4","label":"Установка Poetry"},
		{"id":"9cb22ce139391e78","type":"group","x":-340,"y":1280,"width":763,"height":524,"label":"Запуск готового проекта"},
		{"id":"32e03e48265d5b67","type":"group","x":-375,"y":3300,"width":858,"height":458,"color":"4","label":"Запуск сервера FastAPI"},
		{"id":"eeba9a92eedd3633","x":600,"y":2716,"width":388,"height":629,"color":"4","type":"group","label":"venv в VSCode"},
		{"id":"0df0ead8627c598e","type":"text","text":"Проверка:\n```bash\npoetry --version\n```\n","x":-84,"y":-240,"width":250,"height":139,"color":"3"},
		{"id":"729ba541582f224c","type":"text","text":"```bash\ncurl -sSL https://install.python-poetry.org | python3 - \n```","x":-390,"y":-520,"width":360,"height":122},
		{"id":"2357511ecf21c4db","type":"text","text":"```bash\npip install poetry==1.5.1\n```","x":147,"y":-520,"width":325,"height":122},
		{"id":"ce51ee464e1dc2ef","type":"text","text":"Соханение в файл:\n```bash\npoetry export -f requirements.txt --output requirements.txt\n```\nВключая зависимости для разработки:\n```bash\npoetry export -f requirements.txt --output requirements.txt --with dev\n\n```","x":-1380,"y":1560,"width":360,"height":371},
		{"id":"871609e40219c95a","type":"text","text":"Установка зависимостей:\n```bash\npoetry add fastapi uvicorn\n```\n\n```bash\npoetry remove fastapi uvicorn\n```","x":-1140,"y":1300,"width":360,"height":200},
		{"id":"dfcae8100d9d33fd","type":"text","text":"По умолчанию Poetry хранит все зависимости в файлах pyproject.toml и poetry.lock.","x":-952,"y":1600,"width":345,"height":146},
		{"id":"e3ee6adb269ce5c0","type":"text","text":"2. Инициализация Poetry (если вы работаете в существующем проекте):\n   \n```bash\n poetry init\n```\n   ","x":137,"y":80,"width":330,"height":208},
		{"id":"21c0988d3ece307c","type":"text","text":"2. Создайте новый проект Poetry:\n```bash\npoetry new my-project\ncd my_project\n```\n   \n","x":-400,"y":84,"width":360,"height":200},
		{"id":"544882779bf7495c","type":"text","text":"Ответить на вопросы","x":-87,"y":440,"width":250,"height":60},
		{"id":"e8f09d2789c80e5d","type":"text","text":"Базовое приложение fastapi (main.py):\n```python\nfrom fastapi import FastAPI, HTTPException\nimport asyncio\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"message\": \"Hello, world\"}\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int):\n    # Пример асинхронной операции\n    await asyncio.sleep(1)\n    return {\"item_id\": item_id}\n    \n@app.post(\"/create_item/\")\nasync def create_item(item: dict):\n    # Пример обработки POST-запроса\n    await asyncio.sleep(1)\n    return {\"status\": \"Item created\", \"item\": item}\n\n```","x":-220,"y":2480,"width":540,"height":640},
		{"id":"9efbe80870e36eda","type":"text","text":"Запустить сервер можно с помощью команды:\n```bash\npoetry run uvicorn main:app --reload\n```\n","x":-355,"y":3320,"width":284,"height":242},
		{"id":"e4fcbc40cb61a26e","type":"text","text":"вход в виртуальное окружение до версии Poetry 2:\n```bash\npoetry shell\n```","x":-390,"y":660,"width":360,"height":156},
		{"id":"d27883442f10f5b4","type":"text","text":"Вход в venv для Poetry 2:\n```bash\npoetry env use python3\n```\n   \n","x":147,"y":660,"width":330,"height":156},
		{"id":"faa10a22019a1764","type":"text","text":"Проверка:\n```bash\npoetry env info\n```","x":-67,"y":961,"width":250,"height":119,"color":"3"},
		{"id":"0a6c0a86fedd0456","type":"text","text":"Добавьте новую секцию в файл pyproject.toml:\n```toml\n[tool.poetry.scripts]\nstart = \"uvicorn main:app --reload\"\n\n```","x":159,"y":3320,"width":304,"height":251},
		{"id":"5d608d6e14c4d191","type":"text","text":"```bash\npoetry run start\n```","x":186,"y":3638,"width":250,"height":100},
		{"id":"1b03f9e4eae4308a","type":"text","text":"Переустановка зависимостей","x":860,"y":1300,"width":250,"height":60},
		{"id":"f4b09694f9908b9e","type":"text","text":"Удалить текущее виртуальное окружение:\n   \n```bash\npoetry env remove $(poetry env info --path)\n```\n   ","x":1060,"y":1452,"width":420,"height":172},
		{"id":"1d7ad4d1fef6956f","type":"text","text":"Чтобы полностью переустановить все зависимости, выполните:\n\n```bash\npoetry install --no-root\n```","x":540,"y":1452,"width":480,"height":172},
		{"id":"e9a170287d11b997","type":"text","text":"Чтобы восстановить зависимости, используя файл pyproject.toml и poetry.lock, выполните команду:\n\n```bash\npoetry install\n```\nЭта команда автоматически установит все зависимости и создаст виртуальное окружение (если его ещё нет).","x":-320,"y":1464,"width":330,"height":320},
		{"id":"fdbb26412da986cb","type":"text","text":"Если у вас только файл requirements.txt, вы можете использовать pip для установки:\n\n```bash\npip install -r requirements.txt\n```\n","x":83,"y":1464,"width":320,"height":320},
		{"id":"a7a3d5987a949225","type":"text","text":"Восстановление зависимостей","x":-116,"y":1300,"width":330,"height":60},
		{"id":"a9af95eb407b87bc","type":"text","text":"Проверка установленных зависимостей:\n```bash\npoetry show #отобразит список всех зависимостей в проекте (с указанием их версий)\n\npoetry show --tree #получить более подробную информацию о каждой зависимости (включая список транзитивных зависимостей)\n\npoetry show --no-dev #вывести только прямые зависимости (без транзитивных), можно дополнительно указать флаг --no-dev, чтобы исключить зависимости для разработки\n```\n","x":-280,"y":2080,"width":663,"height":300,"color":"3"},
		{"id":"c2af4d4cc6fb310c","type":"text","text":"Заново установить зависимости:\n```bash\npoetry install\n```","x":1060,"y":1700,"width":420,"height":140},
		{"id":"c799d17e669ff397","x":620,"y":2736,"width":348,"height":129,"type":"text","text":"определить путь venv:\n```bash\npoetry env info --path\n```"},
		{"id":"ed13c22798ee4475","x":625,"y":2925,"width":339,"height":400,"type":"text","text":"Добавить путь в интерпретаторы VSCode:\n  - Откройте командную палитру VSCode, нажав Ctrl + Shift + P (на Windows/Linux) или Cmd + Shift + P (на Mac).\n   - Введите и выберите \"Python: Select Interpreter\".\n   - В появившемся списке найдите и выберите интерпретатор, находящийся по пути, который вы получили через Poetry. "}
	],
	"edges":[
		{"id":"3c3ce5c551e241e9","fromNode":"21c0988d3ece307c","fromSide":"bottom","toNode":"544882779bf7495c","toSide":"top"},
		{"id":"56d04f588fdb306f","fromNode":"e3ee6adb269ce5c0","fromSide":"bottom","toNode":"544882779bf7495c","toSide":"top"},
		{"id":"69179023ff81bd5d","fromNode":"e4fcbc40cb61a26e","fromSide":"bottom","toNode":"faa10a22019a1764","toSide":"top"},
		{"id":"ec464c38e003de82","fromNode":"e8f09d2789c80e5d","fromSide":"bottom","toNode":"9efbe80870e36eda","toSide":"top"},
		{"id":"3e997d0e541f935b","fromNode":"e8f09d2789c80e5d","fromSide":"bottom","toNode":"0a6c0a86fedd0456","toSide":"top"},
		{"id":"31968e78f55a14a1","fromNode":"0a6c0a86fedd0456","fromSide":"bottom","toNode":"5d608d6e14c4d191","toSide":"top"},
		{"id":"cf0a0f2aae6bacbe","fromNode":"d27883442f10f5b4","fromSide":"bottom","toNode":"faa10a22019a1764","toSide":"top"},
		{"id":"f1c72e7efbce2499","fromNode":"729ba541582f224c","fromSide":"bottom","toNode":"0df0ead8627c598e","toSide":"top"},
		{"id":"5b81e4b23e5d9813","fromNode":"2357511ecf21c4db","fromSide":"bottom","toNode":"0df0ead8627c598e","toSide":"top"},
		{"id":"d9a465360adb7571","fromNode":"0df0ead8627c598e","fromSide":"bottom","toNode":"e3ee6adb269ce5c0","toSide":"top"},
		{"id":"2c83999a3916fd0b","fromNode":"0df0ead8627c598e","fromSide":"bottom","toNode":"21c0988d3ece307c","toSide":"top"},
		{"id":"f219a318c318d5c3","fromNode":"544882779bf7495c","fromSide":"bottom","toNode":"c41851426f854b51","toSide":"top"},
		{"id":"f059ba5dc66b51fa","fromNode":"871609e40219c95a","fromSide":"bottom","toNode":"ce51ee464e1dc2ef","toSide":"top"},
		{"id":"cd5f4015bdcda831","fromNode":"871609e40219c95a","fromSide":"bottom","toNode":"dfcae8100d9d33fd","toSide":"top"},
		{"id":"e28b4213abf6a4df","fromNode":"a7a3d5987a949225","fromSide":"bottom","toNode":"e9a170287d11b997","toSide":"top"},
		{"id":"b8e5b5879d13ab69","fromNode":"a7a3d5987a949225","fromSide":"bottom","toNode":"fdbb26412da986cb","toSide":"top"},
		{"id":"59dc9cbc78a339d8","fromNode":"1b03f9e4eae4308a","fromSide":"bottom","toNode":"1d7ad4d1fef6956f","toSide":"top"},
		{"id":"51cc9c5b4e921a2f","fromNode":"1b03f9e4eae4308a","fromSide":"bottom","toNode":"f4b09694f9908b9e","toSide":"top"},
		{"id":"621d3582ed906f40","fromNode":"f4b09694f9908b9e","fromSide":"bottom","toNode":"c2af4d4cc6fb310c","toSide":"top"},
		{"id":"ca02aa22d754d631","fromNode":"e7a1cabf00b29f65","fromSide":"bottom","toNode":"a9af95eb407b87bc","toSide":"top"},
		{"id":"1f5a3467f568ffc2","fromNode":"a9af95eb407b87bc","fromSide":"bottom","toNode":"e8f09d2789c80e5d","toSide":"top"},
		{"id":"12cc23623b6723bd","fromNode":"c41851426f854b51","fromSide":"bottom","toNode":"e7a1cabf00b29f65","toSide":"top"},
		{"id":"0f74a9e99527e6dc","fromNode":"e8f09d2789c80e5d","fromSide":"right","toNode":"c799d17e669ff397","toSide":"left"},
		{"id":"2426ae39903e116b","fromNode":"c799d17e669ff397","fromSide":"bottom","toNode":"ed13c22798ee4475","toSide":"top"},
		{"id":"53280b9ed8685e6b","fromNode":"eeba9a92eedd3633","fromSide":"bottom","toNode":"32e03e48265d5b67","toSide":"right"}
	]
}